Local Variables and Typesets
Let
	- Arithmetic is faster for integer variables in bash
	- let x++;
	- let y=x**2,
	- let x*=5
Declare
	- declare -l mean it would turn uppercase to lowercase if input is string
	- declare -u for uppercase
	- declare -a means the type is array
	- declare -r means read_only variable same as constant in other languages
	- declare -A would make it a hash (dictionary type) variable
	examples
	-	declare -l lstring="ABCdef"
		declare -u ustring="ABCdef"
		declare -r readonly="A Value"
		declare -a Myarray
		declare -A Myarray2

		echo lstring = $lstring
		echo ustring = $ustring
		echo readonly = $readonly
		readonly="New Value"
		Myarray[2]="Second Value"
		echo 'Myarray[2]= ' ${Myarray[2]}
		Myarray2["hotdog"]="baseball"
		echo 'Myarray2[hotdog]= ' ${Myarray2["hotdog"]}

		the outputs are 
		- source declare.sh
			lstring = abcdef
			ustring = ABCDEF
			readonly = A Value
			bash: readonly: readonly variable
			Myarray[2]=  Second Value
			Myarray2[hotdog]=  baseball

Typeset
	- typeset x 
	means the variable is local to a functions 
		#!/bin/bash
		function f1 {
		   typeset x
		   x=7
		   y=8
		}
		x=1
		y=2
		echo x is $x
		echo y is $y
		f1
		echo x is $x
		echo y is $y
	outputs:
		x is 1
		y is 2
		x is 1
		y is 8




For, While loops 
	-


